body {
  margin: 0;
  font-family: "Noto Sans", sans-serif;
  /* font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; */
  box-sizing: border-box;
  background-color: #1e1e1e;
}

* {
  margin: 0;
  padding: 0;
}

.add-task-container {
  margin: 10px;
}

.form-container {
  /* border: 1px solid rgb(61, 61, 61); */
  border: 1px solid #2d2d2d;
  border-radius: 5px;
  /* outline:rgb(255, 255, 255); */
  margin-left: 10px;
}

.form-container.focused {
  border: 0.5px solid rgb(150, 150, 150);
}

.form-container.unfocused {
  border: 0.5px solid #2d2d2d;
}

.input-fields {
  display: flex;
  flex-direction: column;
}

.button-group {
  display: flex;
  justify-content: flex-end;
}

.todo-item-container {
  min-width: 50%;
  /* min-height: 600px;
  min-width: 400px; */
  margin: 10px;
}

.todo-item-container {
  letter-spacing: 2px;
  font-weight: bold;
  font-size: medium;
  margin-left: 20px;
  margin-bottom: 10px;
  /* color: white; */
}

ul {
  list-style: none;
  border: 0;
}

.todo-item {
  display: flex;
  flex-direction: column;
  border-bottom: 1px solid rgb(61, 61, 61);
  padding: 10px 0;
  margin-left: 4px;
}

.todo-main {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.todo-main label.todo-text {
  flex-grow: 1;
  margin: 0 10px;
  color: white;
}

.edit-button,
.delete-button {
  background: none;
  border: none;
  cursor: pointer;
  color: white;
  /* margin-left: 10px; */
}

.todo-description {
  margin-left: 25px;
  /* margin-top: 5px; */
  color: white;
}

.timestamp {
  margin-left: 25px;
  margin-top: 5px;
}

.todo-description p .todo-timestamp i {
  margin: 0;
}

.container {
  margin: 100px auto 0;
  height: 100%;
  max-width: 700px;
}

input[type="checkbox"] {
  display: none;
}

.custom-checkbox {
  display: inline-block;
  border: 1px solid rgba(204, 204, 204, 0.604);
  width: 14px;
  height: 14px;
  border-radius: 50%;
  /* background-color: white; */
  cursor: pointer;
  transition: background-color 0.3s, border-color 03s;
}

input[type="checkbox"]:checked + ::before {
  content: "\002714";
}

input[type="checkbox"]:hover + ::before {
  content: "\002714";
  color: rgb(204, 204, 204);
}

.custom-font {
  letter-spacing: 10px;
  font-weight: bold;
  color: white;
}

.button-container {
  height: 20px;
}

.signup {
  margin: 100px auto 0;
  background-color: aliceblue;
  height: 100%;
  width: 100%;
  padding: 10px 10px;
}

.input {
  display: flex;
  justify-content: center;
}

.signUp-button {
  display: flex;
  margin-top: 10px;
  margin-bottom: 5px;
  justify-content: center;
}

.heading {
  display: flex;
  justify-content: center;
  align-items: center;
}

.error {
  color: red;
  font-size: large;
  font-weight: 500;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* 
code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
} */
/* 
.checkbox-container {
  width: 85%;
  position: relative;
}
.checkbox-container ul li p {
  display: flex;
  flex-direction: column-reverse;
  position: absolute;
  top: 10px;
  left: 35px;
}

.checkbox-container ul li i {
  display: flex;
  flex-direction: column-reverse;
  position: absolute;
  top: 40px;
  left: 30px;
  margin-top: 10px;
}
input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.custom-checkbox {
  display: inline-block;
  position: relative;
  width: 20px;
  height: 20px;
  margin: 5px;
  cursor: pointer;
}

.custom-checkbox::before {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  background-color: white;
  border: 2px solid black;
  border-radius: 50%;
  box-sizing: border-box;
  transition: background-color 0.3s, border-color0.3s;
}

input[type="checkbox"]:checked + .custom-checkbox::before {
  content: "\002714";
  display: flex;
  justify-content: center;
  align-items: center;
}

input[type="checkbox"]:hover + .custom-checkbox::before {
  content: "\002714";
  display: flex;
  justify-content: center;
  align-items: center;
}
ul {
  padding: 0;
}
ul li span {
  cursor: pointer;
}
ul li {
  list-style: none;
  padding: 0;
  display: flex;
  align-items: center;
  margin-bottom: 8px;
  position: relative;
  cursor: pointer;
}

.custom-checkbox {
  margin-right: 8px;
}
.edit-button {
  border: none;
  cursor: pointer;
  background-color: transparent;
  margin-left: auto;
  margin-right: 8px;
}

.delete-button {
  border: none;
  cursor: pointer;
  background-color: transparent;
}

.edit-button,
.delete-button {
  background: transparent;
  border: none;
  cursor: pointer;
  position: absolute;
  opacity: 0;
  transform: opacity 0.3s ease;
}

li:hover .edit-button,
li:hover .delete-button {
  opacity: 1;
}

.edit-button {
  right: 36px;
}

.delete-button {
  right: 8px;
}

.main-container {
  margin-bottom: 50px;
  display: flex;
  flex-direction: column;
}

.add-task {
  margin-top: 20px;
  cursor: pointer;
  border: none;
  background-color: transparent;
}

.add-task span {
  font-style: italic;
  padding: 2px;
  margin: 10px;
  display: flex;
  align-items: center;
}
.add-task i {
  display: flex;
  margin-right: 10px;
  align-items: center;
}
.add-task:hover {
  color: red;
}

.form-container {
  width: 100%;
  position: relative;
}
.input-fields {
  margin-top: 30px;
  display: flex;
  flex-direction: column;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 4px;
  max-width: 500%;
  width: 80%;

}

.text-input-field,
.textArea-input-field {
  padding: 5px;
  letter-spacing: 2px;
  width: 100%;
  border-radius: 1px;
  border: 1px solid #ccc;
  margin-bottom: 10px;
}

.button-group {
  display: flex;
  width: 100%;
  justify-content: flex-end;
  position: absolute;
  right: 110px;
  bottom:1px;
}



.add-button,
.cancel-button {
  padding: 5px 10px;
  margin-left: 10px;
  border: none;

  cursor: pointer;
  background-color: transparent;
}

.add-button:hover,
.cancel-button:hover {
  background-color: red;
} */

/* .todo-item-container h1{
  letter-spacing: 2px;
  font-weight: bold;
  font-size: medium;
  margin-left: 20px;
  font-style: italic;
  margin-bottom: 10px;
  color: white;
} */

/* .edit-button{
  margin-left: 10px;
}

.delete-button {
  margin-left: 10px;
} */

/* .text-input-field,
.textArea-input-field{
  padding: 5px;
  letter-spacing: 2px;
  font-weight: bold;
  color: white;
  border: none;
  outline: none;
  background-color: #000;
} */
/* .add-task-button,
.add-button,
.cancel-button {
  border: none;
  color: white;
  background-color: transparent;
  font-weight: bold;
  cursor: pointer;
}
.add-task-button:hover,
.add-button:hover,
.cancel-button:hover{
  color: red;
}

.add-button{
  margin-right: 10px;
}

.cancel-button{
  margin-right: 10px;
} */

/* .add-task-button span  {
  display: flex;
  align-items: center;
  margin-right: 2px;
} */

/* .add-task-button span i{
  display: flex;
  align-items: center;
  margin-right: 5px;
  margin-left: 2px;

} */

/* span {
  display: flex;
  margin-left: 10px;
} */
/* 
<p>{items.description}</p>

<button
className="edit-button"
<p style={{ color: "white" }}>{items.timeStamp}</p> 

onClick={() => handleEditItem(items.id)}
>
<CiEdit />
</button> 
<button
className="delete-button"
onClick={() => handleDeleteItem(items.id)}
>
<TiDocumentDelete />
</button>  */

/* // <li key={items.id} className="todo-item">
//   <div className="todo-main">
//     <input
//       type="checkbox"
//       id={`checkbox-${items.id}`}
//       checked={items.checked}
//       onChange={() => handleChangeCheckbox(items.id)}
//     />
//     <label
//       className="custom-checkbox"
//       htmlFor={`checkbox-${items.id}`}
//     ></label>
//     <label className="todo-text"
//       style={{
//         textDecoration: items.checked ? "line-through" : "none",
//       }}
//     >
//     {items.text}
//     </label>
//     <button
//       className="edit-button"
//       disabled={items.checked}
//       onClick={() => handleEditItem(items.id)}
//     >
//       <CiEdit />
//     </button>
//     <button
//       className="delete-button"
//       onClick={() => handleDeleteItem(items.id)}
//     >
//       <TiDocumentDelete />
//     </button>
//   </div>
//   <div className="todo-description">
//     <p>{items.description}</p>
//   </div>
//   <div className="timestamp">
//     <p style={{ color: "white" }}>{items.timeStamp}</p>
//   </div>
// </li> 

// <button onClick={handleShowForm} className="add-task-button">
//   <span>
//     <i>
//       <IoAddSharp />
//     </i>
//     Add task
//   </span>
// </button>

// label={
  //   <span>
  //     <i>
  //       <IoAddSharp />
  //     </i>
  //     Add task
  //   </span>
  // }
  <input
  type="text"
  className="text-input-field"
  placeholder="Task name..."
  value={inputText}
  onChange={handleInputTextChange}
  onKeyDown={handleOnKeyDown}
  autoFocus
/> 
<input
  type="text"
  className="textArea-input-field"
  placeholder="description...."
  value={description}
  onChange={handletextAreaInput}
  onKeyDown={handleOnKeyDown}

<button className="add-button" type="button" onClick={handleSubmit}>
{editItem ? "save" : "Add"}
</button>
<button
  className="cancel-button"
  onClick={handleCancelClick}
  type="button"
>
  Cancel
</button>  */
